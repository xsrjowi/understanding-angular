{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor() {\n    this.titulo = '02-contador-app';\n    this.numero = 10;\n    this.base = 5;\n  }\n  /*\r\n    Para simplificar la lectura, optimizaremos el código,\r\n      por ello, el sigueinte código no lo vamos a utilizar (es correcto)\r\n  */\n  sumar() {\n    this.numero += 1;\n  }\n  restar() {\n    this.numero -= 1;\n  }\n  // Óprimo:\n  acumular(valor) {\n    this.numero += valor;\n  }\n  acumular5(op) {\n    return op == '+' ? this.numero += this.base : this.numero -= this.base;\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAMlC,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAAlBC;IACL,WAAM,GAAW,iBAAiB;IAClC,WAAM,GAAW,EAAE;IACnB,SAAI,GAAW,CAAC;EAwBlB;EAtBE;;;;EAIAC,KAAK;IACH,IAAI,CAACC,MAAM,IAAI,CAAC;EAClB;EAEAC,MAAM;IACJ,IAAI,CAACD,MAAM,IAAI,CAAC;EAClB;EAEA;EACAE,QAAQ,CAACC,KAAa;IACpB,IAAI,CAACH,MAAM,IAAIG,KAAK;EACtB;EAEAC,SAAS,CAACC,EAAU;IAClB,OAAOA,EAAE,IAAI,GAAG,GACZ,IAAI,CAACL,MAAM,IAAI,IAAI,CAACM,IAAI,GACxB,IAAI,CAACN,MAAM,IAAI,IAAI,CAACM,IAAI;EAC9B;CACD;AA3BYT,YAAY,eAJxBD,SAAS,CAAC;EACTW,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE;CACd,CAAC,GACWX,YAAY,CA2BxB;SA3BYA,YAAY","names":["Component","AppComponent","constructor","sumar","numero","restar","acumular","valor","acumular5","op","base","selector","templateUrl"],"sourceRoot":"","sources":["C:\\Users\\jmas\\Documents\\Angular\\ng-intro\\02-contador-app\\src\\app\\app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n})\nexport class AppComponent {\n  titulo: string = '02-contador-app';\n  numero: number = 10;\n  base: number = 5;\n\n  /* \n    Para simplificar la lectura, optimizaremos el código,\n      por ello, el sigueinte código no lo vamos a utilizar (es correcto)\n  */\n  sumar() {\n    this.numero += 1\n  }\n\n  restar() {\n    this.numero -= 1\n  }\n\n  // Óprimo:\n  acumular(valor: number) {\n    this.numero += valor;\n  }\n\n  acumular5(op: string) {\n    return op == '+' \n      ? this.numero += this.base \n      : this.numero -= this.base \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}