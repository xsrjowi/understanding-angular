{"ast":null,"code":"import * as i0 from \"@angular/core\";\n// Mediante la sigueinte linea, podemos definir exactamente lo que se quiere mostrar en 'app.component.html'\n// Al ser una clase, podemos modificar la clave de sus atributos, per\n//  justamente por eso, si lo cambiamos de ra\nexport class AppComponent {\n  constructor() {\n    this.titulo = '01-Bases';\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 6,\n  vars: 3,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h6\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"h6\");\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.titulo);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(1 + 1);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(\"Hola de nuevo\");\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":";AAEA;AASA;AACA;AACA,OAAM,MAAOA,YAAY;EAVzBC;IAWE,WAAM,GAAG,UAAU;;;AADRD,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAE;EAAAC;EAAAC;EAAAC;IAAA;MCTzBC,0BAAI;MAAAA,YAAY;MAAAA,iBAAK;MACrBA,0BAAI;MAAAA,YAAW;MAAAA,iBAAK;MACpBA,0BAAI;MAAAA,YAAqB;MAAAA,iBAAK;;;MAF1BA,eAAY;MAAZA,gCAAY;MACZA,eAAW;MAAXA,2BAAW;MACXA,eAAqB;MAArBA,qCAAqB","names":["AppComponent","constructor","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\jmas\\Documents\\Angular\\ng-intro\\01-bases\\src\\app\\app.component.ts","C:\\Users\\jmas\\Documents\\Angular\\ng-intro\\01-bases\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n// Mediante la sigueinte linea, podemos definir exactamente lo que se quiere mostrar en 'app.component.html'\n@Component({\nselector:\"app-root\",\n// Mediante la sigueinte linea, podemos definir exactamente lo que se quiere mostrar en 'app.component.html'\n// template[:] `<h1>Hola de nuevo</h1>`\ntemplateUrl: \"app.component.html\"\n\n})\n\n// Al ser una clase, podemos modificar la clave de sus atributos, per\n//  justamente por eso, si lo cambiamos de ra\nexport class AppComponent {\n  titulo = '01-Bases';\n}\n","<!-- \n    Dentro de las llaves {{ }}, podremos incluir cualquier tipo de código JS \n      además, podremos incluir variables globales (o de nuestro componente)\n-->\n<h1>{{ titulo }}</h1>\n<h6>{{ 1 + 1 }}</h6>\n<h6>{{ \"Hola de nuevo\" }}</h6>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}