{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction ListadoComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" <>H\\u00E9roe borrado \");\n    i0.ɵɵelementStart(2, \"small\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.heroe);\n  }\n}\nfunction ListadoComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2, \"No ha borrado nada\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ListadoComponent_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const heroe_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", i_r4 + 1, \" - \", heroe_r3, \" \");\n  }\n}\n/*\r\n  En el curso, al crear el componente, lo ha hecho implementando directament OnInit\r\n    en este caso, lo he puesto manualmente, así como la función correspondiente.\r\n  \r\n  OnInit, es el primer paso del ciclo de vida de Angular.\r\n  Eso implica, que se ejecutará de forma automática\r\n\r\n*/\nexport class ListadoComponent /* implements OnInit */ {\n  constructor() {\n    /*\r\n      constructor() {\r\n        console.log(\"constructor\");\r\n      }\r\n    */\n    /*\r\n      Un caso práctico donde podríamos utilizar OnInit, es para importar datos\r\n        ya sea de una API o de una BD, para disponer de ellos desde el inicio\r\n    */\n    /*\r\n      ngOnInit(): void {\r\n        console.log(\"ngOnInit\");\r\n      }\r\n    */\n    this.heroes = [\"Spiderman\", \"Ironman\", \"Hulk\", \"Thor\", \"Capitán America\"];\n    this.heroeBorrado = \" \";\n  }\n  borrarHeroe() {\n    this.heroeBorrado = this.heroes.shift() || \" \";\n  }\n}\nListadoComponent /* implements OnInit */.ɵfac = function ListadoComponent_Factory(t) {\n  return new (t || ListadoComponent /* implements OnInit */)();\n};\nListadoComponent /* implements OnInit */.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListadoComponent /* implements OnInit */,\n  selectors: [[\"app-listado\"]],\n  decls: 9,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function ListadoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"Listado de H\\u00E9roes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ListadoComponent_div_2_Template, 4, 1, \"div\", 0);\n      i0.ɵɵtemplate(3, ListadoComponent_div_3_Template, 3, 0, \"div\", 0);\n      i0.ɵɵelementStart(4, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ListadoComponent_Template_button_click_4_listener() {\n        return ctx.borrarHeroe();\n      });\n      i0.ɵɵtext(5, \"Borrar H\\u00E9roe\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"ul\");\n      i0.ɵɵtemplate(7, ListadoComponent_li_7_Template, 2, 2, \"li\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"br\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.heroeBorrado !== \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.heroeBorrado);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.heroes);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;IAEAA,2BAAkC;IAC9BA,sCAAgB;IAAAA,6BAAO;IAAAA,YAAW;IAAAA,iBAAQ;;;;IAAnBA,eAAW;IAAXA,kCAAW;;;;;IAItCA,2BAA2B;IACnBA,kCAAkB;IAAAA,iBAAK;;;;;IAY3BA,0BAAgD;IAC5CA,YACJ;IAAAA,iBAAK;;;;;IADDA,eACJ;IADIA,0DACJ;;;ACXJ;;;;;;;;AAQA,OAAM,MAAOC,gBAAgB,CAAC,wBAAuB;EAbrDC;IAcE;;;;;IAMA;;;;IAKA;;;;;IAMA,WAAM,GAAa,CAAC,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,iBAAiB,CAAC;IAC9E,iBAAY,GAAW,GAAG;;EAE1BC,WAAW;IACT,IAAI,CAACC,YAAY,GAAG,IAAI,CAACC,MAAM,CAACC,KAAK,EAAE,IAAI,GAAG;EAChD;;AAvBWL,gBAAgB,CAAC;mBAAjBA,gBAAgB,CAAC,0BAAuB;AAAA;AAAxCA,gBAAgB,CAAC;QAAjBA,gBAAgB,CAAC;EAAuBM;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDnBrDX,yBAAG;MAAAA,sCAAiB;MAAAA,iBAAI;MAExBA,iEAGM;MAENA,iEAEM;MAENA,iCAAgC;MAAxBA;QAAA,OAASY,iBAAa;MAAA,EAAC;MAACZ,iCAAY;MAAAA,iBAAS;MAErDA,0BAAI;MAOAA,+DAEK;MACTA,iBAAK;MAELA,qBAAI;;;MAvBEA,eAA0B;MAA1BA,+CAA0B;MAK1BA,eAAmB;MAAnBA,wCAAmB;MAaCA,eAAW;MAAXA,oCAAW","names":["i0","ListadoComponent","constructor","borrarHeroe","heroeBorrado","heroes","shift","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\jmas\\Documents\\Angular\\ng-intro\\05-one-way-data-binding-directivas\\src\\app\\heroes\\listado\\listado.component.html","C:\\Users\\jmas\\Documents\\Angular\\ng-intro\\05-one-way-data-binding-directivas\\src\\app\\heroes\\listado\\listado.component.ts"],"sourcesContent":["<p>Listado de Héroes</p>\n\n<div *ngIf=\"heroeBorrado !== ' '\">\n    <>Héroe borrado <small>{{ heroe }}</small>\n\n</div>\n\n<div *ngIf=\"!heroeBorrado\">\n    <h3>No ha borrado nada</h3>\n</div>\n\n<button (click)=\"borrarHeroe()\">Borrar Héroe</button>\n\n<ul>\n    <!-- \n        para utilizar las directivas, deberemos especificarlas dentro de alguna etiqueta, ya que sinó, \n          lo detectará como texto plano e imporimirá directamente ese linea\n        \n        también, podemos incluir código JS tal como la declaración del índice\n    -->\n    <li *ngFor=\"let heroe of heroes; let i = index\">\n        {{ i + 1}} - {{ heroe }}\n    </li>\n</ul>\n\n<br>\n\n","/*\n  Tal y como se menciona abajo, \n  OnInit ha sido añadido manualmente y por ello en la linea siguiente, tampoco aparecía\n*/\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-listado',\n  templateUrl: './listado.component.html',\n})\n\n/*\n  En el curso, al crear el componente, lo ha hecho implementando directament OnInit\n    en este caso, lo he puesto manualmente, así como la función correspondiente.\n  \n  OnInit, es el primer paso del ciclo de vida de Angular.\n  Eso implica, que se ejecutará de forma automática\n\n*/\nexport class ListadoComponent /* implements OnInit */ {\n  /*\n    constructor() { \n      console.log(\"constructor\");\n    }\n  */\n\n  /*\n    Un caso práctico donde podríamos utilizar OnInit, es para importar datos \n      ya sea de una API o de una BD, para disponer de ellos desde el inicio\n  */\n\n  /*\n    ngOnInit(): void {\n      console.log(\"ngOnInit\");\n    }\n  */\n\n  heroes: string[] = [\"Spiderman\", \"Ironman\", \"Hulk\", \"Thor\", \"Capitán America\"];\n  heroeBorrado: string = \" \";\n\n  borrarHeroe(): void {\n    this.heroeBorrado = this.heroes.shift() || \" \";\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}